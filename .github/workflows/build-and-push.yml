name: Build & Push Docker Image

on:
  push:
    tags:
      - '*'

  workflow_dispatch:

jobs:
  send-tg-msg:
    name: Send TG message
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Send Telegram message
        uses: proDreams/actions-telegram-notifier@main
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_TOPIC_ID }}
          status: info
          notify_fields: 'repository,branch,commit'
          title: 'Build started.'

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN_GH_DEPLOY }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64 # ARM64 is not supported.
          push: true
          tags: |
            remnawave/backend:latest
            remnawave/backend:${{github.ref_name}}
            ghcr.io/remnawave/backend:latest
            ghcr.io/remnawave/backend:${{github.ref_name}}

  create-release:
    needs: [build-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: NewTag
        id: tag
        uses: JinoArch/get-latest-tag@latest

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GH_DEPLOY }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: v${{ github.ref_name }}
          body: |
            üöÄ Release v${{ github.ref_name }}

            üìù Compare changes: [${{ steps.tag.outputs.previousTag }}...${{ steps.tag.outputs.latestTag }}](https://github.com/${{ github.repository }}/compare/${{ steps.tag.outputs.previousTag }}...${{ steps.tag.outputs.latestTag }})

            Latest Docker image:
            - `remnawave/backend:latest`
            - `ghcr.io/remnawave/backend:latest`

            Docker images:
            - `remnawave/backend:${{github.ref_name}}`
            - `ghcr.io/remnawave/backend:${{github.ref_name}}`
          draft: false
          prerelease: false

  send-finish-tg-msg:
    name: Send TG message
    needs: [build-docker-image, create-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Send Telegram message
        uses: proDreams/actions-telegram-notifier@main
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_TOPIC_ID }}
          status: ${{ job.status }}
          notify_fields: 'repository,branch,commit'
          title: 'Build finished with status: '

  notify-on-error:
    runs-on: ubuntu-latest
    needs: [build-docker-image]
    if: failure()
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Send error notification
        uses: proDreams/actions-telegram-notifier@main
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_TOPIC_ID }}
          status: ${{ job.status }}
          notify_fields: 'repository,branch,commit'
          title: '@${{ github.REPOSITORY }}@${{ github.ref_name }}'
